@use "sass:map";
@use "./themes/dark.scss" as Dark;
@use "./themes/light.scss" as Light;

$themes: (
   light: (
        //Header
        theme_switcher_background_color: rgb(37, 118, 172),
        header_background_color: Light.$main_background_color,
        header_font_color: Light.$main_font_color,
        header_nav_background_hover: Dark.$main_background_color,
        header_nav_font_color_hover: Light.$main_font_color,
        login_font_color: Light.$main_font_color,
        //Home Page
        home_page_background_color: Light.$main_background_color
   ),
   dark: (
        //Header
        theme_switcher_background_color: rgb(183, 255, 255),
        header_background_color: #201F24,
        header_font_color: rgba(255, 255, 255, 0.8),
        header_nav_background_hover: Light.$main_background_color,
        header_nav_font_color_hover: Dark.$main_font_color,
        login_font_color: rgb(183, 255, 255),
        home_page_background_color: Dark.$main_background_color
   ),
 );
 
 @mixin themify($themes) {
   @each $theme, $map in $themes {
     :global(.theme-#{$theme}) & {
       $theme-map: () !global;
       @each $key, $submap in $map {
         $value: map-get(map-get($themes, $theme), '#{$key}');
         $theme-map: map-merge(
             $theme-map, 
               (
                 $key: $value
               )
           ) !global;
       }
       @content;
       $theme-map: null !global;
     }
   }
 }
 
 @function themed($key) {
   @return map-get($theme-map, $key);
 }